const { cmd } = require("../command");
const yts = require("yt-search");
const { ytmp3 } = require("@kelvdra/scraper");
const axios = require("axios"); // Required for buffer download

cmd(
  {
    pattern: "play",
    react: "🎧",
    desc: "Download YouTube Music Audio",
    category: "download",
    filename: __filename,
  },
  async (robin, mek, m, { from, q, reply }) => {
    try {
      if (!q) return reply("*🔍 නමක් හරි ලින්ක් එකක් හරි දෙන්න*");

      // 🔍 Search YouTube
      const searchResult = await yts(q);
      const video = searchResult.videos[0];
      if (!video) return reply("❌ ගීතය හමු නොවීය. වෙනත් වචනයක් උත්සාහ කරන්න.");

      // 🎧 Get download link
      const result = await ytmp3(video.url, "mp3");
      if (!result || !result.download) {
        return reply("❌ Download link එක ලබා ගත නොහැක.");
      }

      const caption = `
🎧 *SENAL MD Song Downloader*

🎶 *Title:* ${video.title}
⏱️ *Duration:* ${video.timestamp}
👁️ *Views:* ${video.views}
📤 *Uploaded:* ${video.ago}
🔗 *URL:* ${video.url}

🔊 *Type:* Audio (.mp3)

╰───────⭓
🌟 Generated by: *Mr Senal*
`;

      // 🖼 Send thumbnail + song details
      await robin.sendMessage(
        from,
        {
          image: { url: video.thumbnail },
          caption,
        },
        { quoted: mek }
      );

      // ⬇️ Download audio as buffer
      const audioBuffer = await axios.get(result.download, {
        responseType: "arraybuffer",
      });

      // 🎵 Send MP3 audio (no local save)
      await robin.sendMessage(
        from,
        {
          audio: Buffer.from(audioBuffer.data),
          mimetype: "audio/mpeg",
          fileName: `${video.title}.mp3`,
        },
        { quoted: mek }
      );

      return reply("✅ *Song sent successfully!*");
    } catch (e) {
      console.error("Play Error:", e);
      return reply(`❌ Error: ${e.message}`);
    }
  }
);
