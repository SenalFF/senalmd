const { ytmp4 } = require('@vreden/youtube_scraper');
const yts = require('yt-search');
const axios = require('axios');
const { cmd } = require('../command'); // your command handler

cmd({
  pattern: 'video2',
  desc: 'Download YouTube videos by name or URL',
  category: 'download',
  use: '.video <song name or link>',
  filename: __filename,
}, async (m, conn, text) => {
  try {
    const { from, quoted } = m;

    // Get search query
    const query = text || quoted?.text;
    if (!query) return m.reply('‚ùå ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±: *.video senura remix*');

    // Search with yt-search
    const search = await yts(query);
    const videoInfo = search.videos[0];
    if (!videoInfo) return m.reply('üö´ ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä‡∂ö‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫.');

    const url = videoInfo.url;
    const title = videoInfo.title;
    const duration = videoInfo.timestamp;
    const thumb = videoInfo.thumbnail;
    const views = videoInfo.views;

    // Get download link using youtube_scraper
    const download = await ytmp4(url, "360");
    if (!download.status || !download.download?.url) {
      return m.reply('üö´ ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö ‡∑Ä‡∑í‡∂∫.');
    }

    // Download and stream video to WhatsApp
    const streamResponse = await axios.get(download.download.url, { responseType: 'stream' });

    await conn.sendMessage(from, {
      video: { stream: streamResponse.data },
      mimetype: 'video/mp4',
      caption: `üé¨ *${title}*\n‚è±Ô∏è ${duration} | üëÅÔ∏è ${views.toLocaleString()}\nüîó ${url}\n\n‚úÖ *Powered by SENAL MD*`,
    }, { quoted: m });

  } catch (e) {
    console.error("Video Download Error:", e);
    m.reply('üö´ *‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑í‡∂∫.*');
  }
});
